// Generated from formatter.g4 by ANTLR 4.8
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class formatterLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NUMLIST_PREFIX=1, TITLE=2, POINTS=3, TYPE=4, RANDOMIZE=5, END_ANSWER=6, 
		SECTION=7, ALL_CHARACTER=8;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"DIGIT", "NEWLINE", "CLOSING_PARENTHESIS", "LETTER", "NUMBER", "BACKSLASH", 
			"ASTERISK", "DOUBLE_ASTERISK", "DOT", "WHITESPACE", "DELIMITER", "ANSWER_MARKER", 
			"GREATER_THAN", "COLON", "A", "B", "C", "D", "E", "F", "I", "K", "L", 
			"M", "N", "O", "P", "R", "S", "T", "U", "W", "Y", "Z", "NUMLIST_PREFIX", 
			"TITLE", "POINTS", "TYPE", "RANDOMIZE", "END_ANSWER", "SECTION", "ALL_CHARACTER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "NUMLIST_PREFIX", "TITLE", "POINTS", "TYPE", "RANDOMIZE", "END_ANSWER", 
			"SECTION", "ALL_CHARACTER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public formatterLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "formatter.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\n\u01a5\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\3"+
		"\2\3\2\3\3\5\3[\n\3\3\3\3\3\5\3_\n\3\3\4\3\4\3\5\3\5\3\6\6\6f\n\6\r\6"+
		"\16\6g\3\6\6\6k\n\6\r\6\16\6l\5\6o\n\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n"+
		"\3\n\3\13\3\13\3\f\5\f}\n\f\3\f\3\f\5\f\u0081\n\f\3\r\3\r\3\r\3\16\3\16"+
		"\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25"+
		"\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34"+
		"\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\7$\u00b4"+
		"\n$\f$\16$\u00b7\13$\3$\5$\u00ba\n$\3$\7$\u00bd\n$\f$\16$\u00c0\13$\3"+
		"$\5$\u00c3\n$\3$\3$\7$\u00c7\n$\f$\16$\u00ca\13$\3$\7$\u00cd\n$\f$\16"+
		"$\u00d0\13$\3$\3$\7$\u00d4\n$\f$\16$\u00d7\13$\3%\3%\7%\u00db\n%\f%\16"+
		"%\u00de\13%\3%\5%\u00e1\n%\3%\7%\u00e4\n%\f%\16%\u00e7\13%\3%\3%\3%\3"+
		"%\3%\3%\5%\u00ef\n%\3%\7%\u00f2\n%\f%\16%\u00f5\13%\3&\3&\7&\u00f9\n&"+
		"\f&\16&\u00fc\13&\3&\5&\u00ff\n&\3&\7&\u0102\n&\f&\16&\u0105\13&\3&\3"+
		"&\3&\3&\3&\3&\5&\u010d\n&\3&\7&\u0110\n&\f&\16&\u0113\13&\3\'\3\'\7\'"+
		"\u0117\n\'\f\'\16\'\u011a\13\'\3\'\5\'\u011d\n\'\3\'\7\'\u0120\n\'\f\'"+
		"\16\'\u0123\13\'\3\'\3\'\3\'\3\'\3\'\5\'\u012a\n\'\3\'\7\'\u012d\n\'\f"+
		"\'\16\'\u0130\13\'\3(\3(\7(\u0134\n(\f(\16(\u0137\13(\3(\5(\u013a\n(\3"+
		"(\7(\u013d\n(\f(\16(\u0140\13(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\5(\u014c"+
		"\n(\3(\3(\5(\u0150\n(\3(\7(\u0153\n(\f(\16(\u0156\13(\3)\3)\7)\u015a\n"+
		")\f)\16)\u015d\13)\3)\5)\u0160\n)\3)\7)\u0163\n)\f)\16)\u0166\13)\3)\3"+
		")\3)\3)\3)\3)\3)\5)\u016f\n)\3)\7)\u0172\n)\f)\16)\u0175\13)\3)\3)\7)"+
		"\u0179\n)\f)\16)\u017c\13)\3*\3*\7*\u0180\n*\f*\16*\u0183\13*\3*\5*\u0186"+
		"\n*\3*\7*\u0189\n*\f*\16*\u018c\13*\3*\3*\3*\3*\3*\3*\3*\5*\u0195\n*\3"+
		"*\7*\u0198\n*\f*\16*\u019b\13*\3*\3*\7*\u019f\n*\f*\16*\u01a2\13*\3+\3"+
		"+\2\2,\3\2\5\2\7\2\t\2\13\2\r\2\17\2\21\2\23\2\25\2\27\2\31\2\33\2\35"+
		"\2\37\2!\2#\2%\2\'\2)\2+\2-\2/\2\61\2\63\2\65\2\67\29\2;\2=\2?\2A\2C\2"+
		"E\2G\3I\4K\5M\6O\7Q\bS\tU\n\3\2\31\3\2\62;\4\2C\\c|\4\2\13\13\"\"\4\2"+
		"CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4\2KKkk\4\2MMmm\4\2NNnn\4"+
		"\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2YYy"+
		"y\4\2[[{{\4\2\\\\||\2\u01b2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\3W\3\2\2\2\5^\3\2\2\2\7"+
		"`\3\2\2\2\tb\3\2\2\2\13e\3\2\2\2\rp\3\2\2\2\17r\3\2\2\2\21t\3\2\2\2\23"+
		"w\3\2\2\2\25y\3\2\2\2\27|\3\2\2\2\31\u0082\3\2\2\2\33\u0085\3\2\2\2\35"+
		"\u0087\3\2\2\2\37\u0089\3\2\2\2!\u008b\3\2\2\2#\u008d\3\2\2\2%\u008f\3"+
		"\2\2\2\'\u0091\3\2\2\2)\u0093\3\2\2\2+\u0095\3\2\2\2-\u0097\3\2\2\2/\u0099"+
		"\3\2\2\2\61\u009b\3\2\2\2\63\u009d\3\2\2\2\65\u009f\3\2\2\2\67\u00a1\3"+
		"\2\2\29\u00a3\3\2\2\2;\u00a5\3\2\2\2=\u00a7\3\2\2\2?\u00a9\3\2\2\2A\u00ab"+
		"\3\2\2\2C\u00ad\3\2\2\2E\u00af\3\2\2\2G\u00b1\3\2\2\2I\u00d8\3\2\2\2K"+
		"\u00f6\3\2\2\2M\u0114\3\2\2\2O\u0131\3\2\2\2Q\u0157\3\2\2\2S\u017d\3\2"+
		"\2\2U\u01a3\3\2\2\2WX\t\2\2\2X\4\3\2\2\2Y[\7\17\2\2ZY\3\2\2\2Z[\3\2\2"+
		"\2[\\\3\2\2\2\\_\7\f\2\2]_\7\17\2\2^Z\3\2\2\2^]\3\2\2\2_\6\3\2\2\2`a\7"+
		"+\2\2a\b\3\2\2\2bc\t\3\2\2c\n\3\2\2\2df\5\3\2\2ed\3\2\2\2fg\3\2\2\2ge"+
		"\3\2\2\2gh\3\2\2\2hn\3\2\2\2ik\5\3\2\2ji\3\2\2\2kl\3\2\2\2lj\3\2\2\2l"+
		"m\3\2\2\2mo\3\2\2\2nj\3\2\2\2no\3\2\2\2o\f\3\2\2\2pq\7^\2\2q\16\3\2\2"+
		"\2rs\7,\2\2s\20\3\2\2\2tu\7,\2\2uv\7,\2\2v\22\3\2\2\2wx\7\60\2\2x\24\3"+
		"\2\2\2yz\t\4\2\2z\26\3\2\2\2{}\5\r\7\2|{\3\2\2\2|}\3\2\2\2}\u0080\3\2"+
		"\2\2~\u0081\5\23\n\2\177\u0081\5\7\4\2\u0080~\3\2\2\2\u0080\177\3\2\2"+
		"\2\u0081\30\3\2\2\2\u0082\u0083\5\r\7\2\u0083\u0084\5\17\b\2\u0084\32"+
		"\3\2\2\2\u0085\u0086\7@\2\2\u0086\34\3\2\2\2\u0087\u0088\7<\2\2\u0088"+
		"\36\3\2\2\2\u0089\u008a\t\5\2\2\u008a \3\2\2\2\u008b\u008c\t\6\2\2\u008c"+
		"\"\3\2\2\2\u008d\u008e\t\7\2\2\u008e$\3\2\2\2\u008f\u0090\t\b\2\2\u0090"+
		"&\3\2\2\2\u0091\u0092\t\t\2\2\u0092(\3\2\2\2\u0093\u0094\t\n\2\2\u0094"+
		"*\3\2\2\2\u0095\u0096\t\13\2\2\u0096,\3\2\2\2\u0097\u0098\t\f\2\2\u0098"+
		".\3\2\2\2\u0099\u009a\t\r\2\2\u009a\60\3\2\2\2\u009b\u009c\t\16\2\2\u009c"+
		"\62\3\2\2\2\u009d\u009e\t\17\2\2\u009e\64\3\2\2\2\u009f\u00a0\t\20\2\2"+
		"\u00a0\66\3\2\2\2\u00a1\u00a2\t\21\2\2\u00a28\3\2\2\2\u00a3\u00a4\t\22"+
		"\2\2\u00a4:\3\2\2\2\u00a5\u00a6\t\23\2\2\u00a6<\3\2\2\2\u00a7\u00a8\t"+
		"\24\2\2\u00a8>\3\2\2\2\u00a9\u00aa\t\25\2\2\u00aa@\3\2\2\2\u00ab\u00ac"+
		"\t\26\2\2\u00acB\3\2\2\2\u00ad\u00ae\t\27\2\2\u00aeD\3\2\2\2\u00af\u00b0"+
		"\t\30\2\2\u00b0F\3\2\2\2\u00b1\u00b5\5\5\3\2\u00b2\u00b4\5\25\13\2\u00b3"+
		"\u00b2\3\2\2\2\u00b4\u00b7\3\2\2\2\u00b5\u00b3\3\2\2\2\u00b5\u00b6\3\2"+
		"\2\2\u00b6\u00b9\3\2\2\2\u00b7\u00b5\3\2\2\2\u00b8\u00ba\5\33\16\2\u00b9"+
		"\u00b8\3\2\2\2\u00b9\u00ba\3\2\2\2\u00ba\u00be\3\2\2\2\u00bb\u00bd\5\25"+
		"\13\2\u00bc\u00bb\3\2\2\2\u00bd\u00c0\3\2\2\2\u00be\u00bc\3\2\2\2\u00be"+
		"\u00bf\3\2\2\2\u00bf\u00c2\3\2\2\2\u00c0\u00be\3\2\2\2\u00c1\u00c3\5\21"+
		"\t\2\u00c2\u00c1\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3\u00c4\3\2\2\2\u00c4"+
		"\u00c8\5\13\6\2\u00c5\u00c7\5\25\13\2\u00c6\u00c5\3\2\2\2\u00c7\u00ca"+
		"\3\2\2\2\u00c8\u00c6\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c9\u00ce\3\2\2\2\u00ca"+
		"\u00c8\3\2\2\2\u00cb\u00cd\5\25\13\2\u00cc\u00cb\3\2\2\2\u00cd\u00d0\3"+
		"\2\2\2\u00ce\u00cc\3\2\2\2\u00ce\u00cf\3\2\2\2\u00cf\u00d1\3\2\2\2\u00d0"+
		"\u00ce\3\2\2\2\u00d1\u00d5\5\27\f\2\u00d2\u00d4\5\25\13\2\u00d3\u00d2"+
		"\3\2\2\2\u00d4\u00d7\3\2\2\2\u00d5\u00d3\3\2\2\2\u00d5\u00d6\3\2\2\2\u00d6"+
		"H\3\2\2\2\u00d7\u00d5\3\2\2\2\u00d8\u00dc\5\5\3\2\u00d9\u00db\5\25\13"+
		"\2\u00da\u00d9\3\2\2\2\u00db\u00de\3\2\2\2\u00dc\u00da\3\2\2\2\u00dc\u00dd"+
		"\3\2\2\2\u00dd\u00e0\3\2\2\2\u00de\u00dc\3\2\2\2\u00df\u00e1\5\33\16\2"+
		"\u00e0\u00df\3\2\2\2\u00e0\u00e1\3\2\2\2\u00e1\u00e5\3\2\2\2\u00e2\u00e4"+
		"\5\25\13\2\u00e3\u00e2\3\2\2\2\u00e4\u00e7\3\2\2\2\u00e5\u00e3\3\2\2\2"+
		"\u00e5\u00e6\3\2\2\2\u00e6\u00e8\3\2\2\2\u00e7\u00e5\3\2\2\2\u00e8\u00e9"+
		"\5=\37\2\u00e9\u00ea\5+\26\2\u00ea\u00eb\5=\37\2\u00eb\u00ec\5/\30\2\u00ec"+
		"\u00ee\5\'\24\2\u00ed\u00ef\5;\36\2\u00ee\u00ed\3\2\2\2\u00ee\u00ef\3"+
		"\2\2\2\u00ef\u00f3\3\2\2\2\u00f0\u00f2\5\25\13\2\u00f1\u00f0\3\2\2\2\u00f2"+
		"\u00f5\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f3\u00f4\3\2\2\2\u00f4J\3\2\2\2"+
		"\u00f5\u00f3\3\2\2\2\u00f6\u00fa\5\5\3\2\u00f7\u00f9\5\25\13\2\u00f8\u00f7"+
		"\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fb"+
		"\u00fe\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fd\u00ff\5\33\16\2\u00fe\u00fd\3"+
		"\2\2\2\u00fe\u00ff\3\2\2\2\u00ff\u0103\3\2\2\2\u0100\u0102\5\25\13\2\u0101"+
		"\u0100\3\2\2\2\u0102\u0105\3\2\2\2\u0103\u0101\3\2\2\2\u0103\u0104\3\2"+
		"\2\2\u0104\u0106\3\2\2\2\u0105\u0103\3\2\2\2\u0106\u0107\5\67\34\2\u0107"+
		"\u0108\5\65\33\2\u0108\u0109\5+\26\2\u0109\u010a\5\63\32\2\u010a\u010c"+
		"\5=\37\2\u010b\u010d\5;\36\2\u010c\u010b\3\2\2\2\u010c\u010d\3\2\2\2\u010d"+
		"\u0111\3\2\2\2\u010e\u0110\5\25\13\2\u010f\u010e\3\2\2\2\u0110\u0113\3"+
		"\2\2\2\u0111\u010f\3\2\2\2\u0111\u0112\3\2\2\2\u0112L\3\2\2\2\u0113\u0111"+
		"\3\2\2\2\u0114\u0118\5\5\3\2\u0115\u0117\5\25\13\2\u0116\u0115\3\2\2\2"+
		"\u0117\u011a\3\2\2\2\u0118\u0116\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u011c"+
		"\3\2\2\2\u011a\u0118\3\2\2\2\u011b\u011d\5\33\16\2\u011c\u011b\3\2\2\2"+
		"\u011c\u011d\3\2\2\2\u011d\u0121\3\2\2\2\u011e\u0120\5\25\13\2\u011f\u011e"+
		"\3\2\2\2\u0120\u0123\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122\3\2\2\2\u0122"+
		"\u0124\3\2\2\2\u0123\u0121\3\2\2\2\u0124\u0125\5=\37\2\u0125\u0126\5C"+
		"\"\2\u0126\u0127\5\67\34\2\u0127\u0129\5\'\24\2\u0128\u012a\5;\36\2\u0129"+
		"\u0128\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012e\3\2\2\2\u012b\u012d\5\25"+
		"\13\2\u012c\u012b\3\2\2\2\u012d\u0130\3\2\2\2\u012e\u012c\3\2\2\2\u012e"+
		"\u012f\3\2\2\2\u012fN\3\2\2\2\u0130\u012e\3\2\2\2\u0131\u0135\5\5\3\2"+
		"\u0132\u0134\5\25\13\2\u0133\u0132\3\2\2\2\u0134\u0137\3\2\2\2\u0135\u0133"+
		"\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0139\3\2\2\2\u0137\u0135\3\2\2\2\u0138"+
		"\u013a\5\33\16\2\u0139\u0138\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013e\3"+
		"\2\2\2\u013b\u013d\5\25\13\2\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e"+
		"\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0141\3\2\2\2\u0140\u013e\3\2"+
		"\2\2\u0141\u0142\59\35\2\u0142\u0143\5\37\20\2\u0143\u0144\5\63\32\2\u0144"+
		"\u0145\5%\23\2\u0145\u0146\5\65\33\2\u0146\u014b\5\61\31\2\u0147\u0148"+
		"\5+\26\2\u0148\u0149\5E#\2\u0149\u014a\5\'\24\2\u014a\u014c\3\2\2\2\u014b"+
		"\u0147\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014f\3\2\2\2\u014d\u0150\5;"+
		"\36\2\u014e\u0150\5%\23\2\u014f\u014d\3\2\2\2\u014f\u014e\3\2\2\2\u014f"+
		"\u0150\3\2\2\2\u0150\u0154\3\2\2\2\u0151\u0153\5\25\13\2\u0152\u0151\3"+
		"\2\2\2\u0153\u0156\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155"+
		"P\3\2\2\2\u0156\u0154\3\2\2\2\u0157\u015b\5\5\3\2\u0158\u015a\5\25\13"+
		"\2\u0159\u0158\3\2\2\2\u015a\u015d\3\2\2\2\u015b\u0159\3\2\2\2\u015b\u015c"+
		"\3\2\2\2\u015c\u015f\3\2\2\2\u015d\u015b\3\2\2\2\u015e\u0160\5\33\16\2"+
		"\u015f\u015e\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0164\3\2\2\2\u0161\u0163"+
		"\5\25\13\2\u0162\u0161\3\2\2\2\u0163\u0166\3\2\2\2\u0164\u0162\3\2\2\2"+
		"\u0164\u0165\3\2\2\2\u0165\u0167\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0168"+
		"\5\37\20\2\u0168\u0169\5\63\32\2\u0169\u016a\5;\36\2\u016a\u016b\5A!\2"+
		"\u016b\u016c\5\'\24\2\u016c\u016e\59\35\2\u016d\u016f\5;\36\2\u016e\u016d"+
		"\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u0173\3\2\2\2\u0170\u0172\5\25\13\2"+
		"\u0171\u0170\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0171\3\2\2\2\u0173\u0174"+
		"\3\2\2\2\u0174\u0176\3\2\2\2\u0175\u0173\3\2\2\2\u0176\u017a\5\35\17\2"+
		"\u0177\u0179\5\25\13\2\u0178\u0177\3\2\2\2\u0179\u017c\3\2\2\2\u017a\u0178"+
		"\3\2\2\2\u017a\u017b\3\2\2\2\u017bR\3\2\2\2\u017c\u017a\3\2\2\2\u017d"+
		"\u0181\5\5\3\2\u017e\u0180\5\25\13\2\u017f\u017e\3\2\2\2\u0180\u0183\3"+
		"\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182\u0185\3\2\2\2\u0183"+
		"\u0181\3\2\2\2\u0184\u0186\5\33\16\2\u0185\u0184\3\2\2\2\u0185\u0186\3"+
		"\2\2\2\u0186\u018a\3\2\2\2\u0187\u0189\5\25\13\2\u0188\u0187\3\2\2\2\u0189"+
		"\u018c\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018d\3\2"+
		"\2\2\u018c\u018a\3\2\2\2\u018d\u018e\5;\36\2\u018e\u018f\5\'\24\2\u018f"+
		"\u0190\5#\22\2\u0190\u0191\5=\37\2\u0191\u0192\5+\26\2\u0192\u0194\5\65"+
		"\33\2\u0193\u0195\5\63\32\2\u0194\u0193\3\2\2\2\u0194\u0195\3\2\2\2\u0195"+
		"\u0199\3\2\2\2\u0196\u0198\5\25\13\2\u0197\u0196\3\2\2\2\u0198\u019b\3"+
		"\2\2\2\u0199\u0197\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019c\3\2\2\2\u019b"+
		"\u0199\3\2\2\2\u019c\u01a0\5\35\17\2\u019d\u019f\5\25\13\2\u019e\u019d"+
		"\3\2\2\2\u019f\u01a2\3\2\2\2\u01a0\u019e\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1"+
		"T\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a3\u01a4\13\2\2\2\u01a4V\3\2\2\2\62\2"+
		"Z^gln|\u0080\u00b5\u00b9\u00be\u00c2\u00c8\u00ce\u00d5\u00dc\u00e0\u00e5"+
		"\u00ee\u00f3\u00fa\u00fe\u0103\u010c\u0111\u0118\u011c\u0121\u0129\u012e"+
		"\u0135\u0139\u013e\u014b\u014f\u0154\u015b\u015f\u0164\u016e\u0173\u017a"+
		"\u0181\u0185\u018a\u0194\u0199\u01a0\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}