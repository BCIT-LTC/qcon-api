// Generated from /Users/viresh/Documents/qcon_sept_2021/qcon-api/api_v3/formatter/formattertry.g4 by ANTLR 4.8
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class formatterLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TITLE=1, POINTS=2, TYPE=3, RANDOMIZE=4, NUMBER_ONE=5, BODY_LIST_PREFIX=6, 
		END_ANSWER=7, ALL_CHARACTER=8;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"DIGIT", "NEWLINE", "CLOSING_PARENTHESIS", "LETTER", "NUMBER", "BACKSLASH", 
			"ASTERISK", "DOUBLE_ASTERISK", "DOT", "WHITESPACE", "DELIMITER", "ANSWER_MARKER", 
			"GREATER_THAN", "COLON", "A", "B", "C", "D", "E", "F", "I", "K", "L", 
			"M", "N", "O", "P", "R", "S", "T", "U", "W", "Y", "Z", "TITLE", "POINTS", 
			"TYPE", "RANDOMIZE", "NUMBER_ONE", "BODY_LIST_PREFIX", "END_ANSWER", 
			"ALL_CHARACTER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TITLE", "POINTS", "TYPE", "RANDOMIZE", "NUMBER_ONE", "BODY_LIST_PREFIX", 
			"END_ANSWER", "ALL_CHARACTER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public formatterLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "formattertry.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\n\u019b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\3"+
		"\2\3\2\3\3\5\3[\n\3\3\3\3\3\5\3_\n\3\3\4\3\4\3\5\3\5\3\6\6\6f\n\6\r\6"+
		"\16\6g\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f\5\fv\n\f\3\f"+
		"\3\f\5\fz\n\f\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22"+
		"\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31"+
		"\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3"+
		" \3!\3!\3\"\3\"\3#\3#\3$\3$\7$\u00ad\n$\f$\16$\u00b0\13$\3$\5$\u00b3\n"+
		"$\3$\7$\u00b6\n$\f$\16$\u00b9\13$\3$\3$\3$\3$\3$\3$\5$\u00c1\n$\3$\7$"+
		"\u00c4\n$\f$\16$\u00c7\13$\3%\3%\7%\u00cb\n%\f%\16%\u00ce\13%\3%\5%\u00d1"+
		"\n%\3%\7%\u00d4\n%\f%\16%\u00d7\13%\3%\3%\3%\3%\3%\3%\5%\u00df\n%\3%\7"+
		"%\u00e2\n%\f%\16%\u00e5\13%\3&\3&\7&\u00e9\n&\f&\16&\u00ec\13&\3&\5&\u00ef"+
		"\n&\3&\7&\u00f2\n&\f&\16&\u00f5\13&\3&\3&\3&\3&\3&\5&\u00fc\n&\3&\7&\u00ff"+
		"\n&\f&\16&\u0102\13&\3\'\3\'\7\'\u0106\n\'\f\'\16\'\u0109\13\'\3\'\5\'"+
		"\u010c\n\'\3\'\7\'\u010f\n\'\f\'\16\'\u0112\13\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\5\'\u011e\n\'\3\'\3\'\5\'\u0122\n\'\3\'\7\'\u0125\n"+
		"\'\f\'\16\'\u0128\13\'\3(\3(\7(\u012c\n(\f(\16(\u012f\13(\3(\5(\u0132"+
		"\n(\3(\7(\u0135\n(\f(\16(\u0138\13(\3(\5(\u013b\n(\3(\3(\7(\u013f\n(\f"+
		"(\16(\u0142\13(\3(\3(\7(\u0146\n(\f(\16(\u0149\13(\3)\3)\3*\3*\7*\u014f"+
		"\n*\f*\16*\u0152\13*\3*\5*\u0155\n*\3*\7*\u0158\n*\f*\16*\u015b\13*\3"+
		"*\3*\3*\3*\3*\3*\3*\5*\u0164\n*\3*\7*\u0167\n*\f*\16*\u016a\13*\3*\3*"+
		"\7*\u016e\n*\f*\16*\u0171\13*\3*\3*\7*\u0175\n*\f*\16*\u0178\13*\3*\5"+
		"*\u017b\n*\3*\7*\u017e\n*\f*\16*\u0181\13*\3*\5*\u0184\n*\3*\7*\u0187"+
		"\n*\f*\16*\u018a\13*\3*\3*\7*\u018e\n*\f*\16*\u0191\13*\3*\3*\7*\u0195"+
		"\n*\f*\16*\u0198\13*\3+\3+\2\2,\3\2\5\2\7\2\t\2\13\2\r\2\17\2\21\2\23"+
		"\2\25\2\27\2\31\2\33\2\35\2\37\2!\2#\2%\2\'\2)\2+\2-\2/\2\61\2\63\2\65"+
		"\2\67\29\2;\2=\2?\2A\2C\2E\2G\3I\4K\5M\6O\7Q\bS\tU\n\3\2\31\3\2\62;\4"+
		"\2C\\c|\4\2\13\13\"\"\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh"+
		"\4\2KKkk\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2TTtt\4\2U"+
		"Uuu\4\2VVvv\4\2WWww\4\2YYyy\4\2[[{{\4\2\\\\||\2\u01a6\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"+
		"\2\3W\3\2\2\2\5^\3\2\2\2\7`\3\2\2\2\tb\3\2\2\2\13e\3\2\2\2\ri\3\2\2\2"+
		"\17k\3\2\2\2\21m\3\2\2\2\23p\3\2\2\2\25r\3\2\2\2\27u\3\2\2\2\31{\3\2\2"+
		"\2\33~\3\2\2\2\35\u0080\3\2\2\2\37\u0082\3\2\2\2!\u0084\3\2\2\2#\u0086"+
		"\3\2\2\2%\u0088\3\2\2\2\'\u008a\3\2\2\2)\u008c\3\2\2\2+\u008e\3\2\2\2"+
		"-\u0090\3\2\2\2/\u0092\3\2\2\2\61\u0094\3\2\2\2\63\u0096\3\2\2\2\65\u0098"+
		"\3\2\2\2\67\u009a\3\2\2\29\u009c\3\2\2\2;\u009e\3\2\2\2=\u00a0\3\2\2\2"+
		"?\u00a2\3\2\2\2A\u00a4\3\2\2\2C\u00a6\3\2\2\2E\u00a8\3\2\2\2G\u00aa\3"+
		"\2\2\2I\u00c8\3\2\2\2K\u00e6\3\2\2\2M\u0103\3\2\2\2O\u0129\3\2\2\2Q\u014a"+
		"\3\2\2\2S\u014c\3\2\2\2U\u0199\3\2\2\2WX\t\2\2\2X\4\3\2\2\2Y[\7\17\2\2"+
		"ZY\3\2\2\2Z[\3\2\2\2[\\\3\2\2\2\\_\7\f\2\2]_\7\17\2\2^Z\3\2\2\2^]\3\2"+
		"\2\2_\6\3\2\2\2`a\7+\2\2a\b\3\2\2\2bc\t\3\2\2c\n\3\2\2\2df\5\3\2\2ed\3"+
		"\2\2\2fg\3\2\2\2ge\3\2\2\2gh\3\2\2\2h\f\3\2\2\2ij\7^\2\2j\16\3\2\2\2k"+
		"l\7,\2\2l\20\3\2\2\2mn\7,\2\2no\7,\2\2o\22\3\2\2\2pq\7\60\2\2q\24\3\2"+
		"\2\2rs\t\4\2\2s\26\3\2\2\2tv\5\r\7\2ut\3\2\2\2uv\3\2\2\2vy\3\2\2\2wz\5"+
		"\23\n\2xz\5\7\4\2yw\3\2\2\2yx\3\2\2\2z\30\3\2\2\2{|\5\r\7\2|}\5\17\b\2"+
		"}\32\3\2\2\2~\177\7@\2\2\177\34\3\2\2\2\u0080\u0081\7<\2\2\u0081\36\3"+
		"\2\2\2\u0082\u0083\t\5\2\2\u0083 \3\2\2\2\u0084\u0085\t\6\2\2\u0085\""+
		"\3\2\2\2\u0086\u0087\t\7\2\2\u0087$\3\2\2\2\u0088\u0089\t\b\2\2\u0089"+
		"&\3\2\2\2\u008a\u008b\t\t\2\2\u008b(\3\2\2\2\u008c\u008d\t\n\2\2\u008d"+
		"*\3\2\2\2\u008e\u008f\t\13\2\2\u008f,\3\2\2\2\u0090\u0091\t\f\2\2\u0091"+
		".\3\2\2\2\u0092\u0093\t\r\2\2\u0093\60\3\2\2\2\u0094\u0095\t\16\2\2\u0095"+
		"\62\3\2\2\2\u0096\u0097\t\17\2\2\u0097\64\3\2\2\2\u0098\u0099\t\20\2\2"+
		"\u0099\66\3\2\2\2\u009a\u009b\t\21\2\2\u009b8\3\2\2\2\u009c\u009d\t\22"+
		"\2\2\u009d:\3\2\2\2\u009e\u009f\t\23\2\2\u009f<\3\2\2\2\u00a0\u00a1\t"+
		"\24\2\2\u00a1>\3\2\2\2\u00a2\u00a3\t\25\2\2\u00a3@\3\2\2\2\u00a4\u00a5"+
		"\t\26\2\2\u00a5B\3\2\2\2\u00a6\u00a7\t\27\2\2\u00a7D\3\2\2\2\u00a8\u00a9"+
		"\t\30\2\2\u00a9F\3\2\2\2\u00aa\u00ae\5\5\3\2\u00ab\u00ad\5\25\13\2\u00ac"+
		"\u00ab\3\2\2\2\u00ad\u00b0\3\2\2\2\u00ae\u00ac\3\2\2\2\u00ae\u00af\3\2"+
		"\2\2\u00af\u00b2\3\2\2\2\u00b0\u00ae\3\2\2\2\u00b1\u00b3\5\33\16\2\u00b2"+
		"\u00b1\3\2\2\2\u00b2\u00b3\3\2\2\2\u00b3\u00b7\3\2\2\2\u00b4\u00b6\5\25"+
		"\13\2\u00b5\u00b4\3\2\2\2\u00b6\u00b9\3\2\2\2\u00b7\u00b5\3\2\2\2\u00b7"+
		"\u00b8\3\2\2\2\u00b8\u00ba\3\2\2\2\u00b9\u00b7\3\2\2\2\u00ba\u00bb\5="+
		"\37\2\u00bb\u00bc\5+\26\2\u00bc\u00bd\5=\37\2\u00bd\u00be\5/\30\2\u00be"+
		"\u00c0\5\'\24\2\u00bf\u00c1\5;\36\2\u00c0\u00bf\3\2\2\2\u00c0\u00c1\3"+
		"\2\2\2\u00c1\u00c5\3\2\2\2\u00c2\u00c4\5\25\13\2\u00c3\u00c2\3\2\2\2\u00c4"+
		"\u00c7\3\2\2\2\u00c5\u00c3\3\2\2\2\u00c5\u00c6\3\2\2\2\u00c6H\3\2\2\2"+
		"\u00c7\u00c5\3\2\2\2\u00c8\u00cc\5\5\3\2\u00c9\u00cb\5\25\13\2\u00ca\u00c9"+
		"\3\2\2\2\u00cb\u00ce\3\2\2\2\u00cc\u00ca\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd"+
		"\u00d0\3\2\2\2\u00ce\u00cc\3\2\2\2\u00cf\u00d1\5\33\16\2\u00d0\u00cf\3"+
		"\2\2\2\u00d0\u00d1\3\2\2\2\u00d1\u00d5\3\2\2\2\u00d2\u00d4\5\25\13\2\u00d3"+
		"\u00d2\3\2\2\2\u00d4\u00d7\3\2\2\2\u00d5\u00d3\3\2\2\2\u00d5\u00d6\3\2"+
		"\2\2\u00d6\u00d8\3\2\2\2\u00d7\u00d5\3\2\2\2\u00d8\u00d9\5\67\34\2\u00d9"+
		"\u00da\5\65\33\2\u00da\u00db\5+\26\2\u00db\u00dc\5\63\32\2\u00dc\u00de"+
		"\5=\37\2\u00dd\u00df\5;\36\2\u00de\u00dd\3\2\2\2\u00de\u00df\3\2\2\2\u00df"+
		"\u00e3\3\2\2\2\u00e0\u00e2\5\25\13\2\u00e1\u00e0\3\2\2\2\u00e2\u00e5\3"+
		"\2\2\2\u00e3\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4J\3\2\2\2\u00e5\u00e3"+
		"\3\2\2\2\u00e6\u00ea\5\5\3\2\u00e7\u00e9\5\25\13\2\u00e8\u00e7\3\2\2\2"+
		"\u00e9\u00ec\3\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb\u00ee"+
		"\3\2\2\2\u00ec\u00ea\3\2\2\2\u00ed\u00ef\5\33\16\2\u00ee\u00ed\3\2\2\2"+
		"\u00ee\u00ef\3\2\2\2\u00ef\u00f3\3\2\2\2\u00f0\u00f2\5\25\13\2\u00f1\u00f0"+
		"\3\2\2\2\u00f2\u00f5\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f3\u00f4\3\2\2\2\u00f4"+
		"\u00f6\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f6\u00f7\5=\37\2\u00f7\u00f8\5C"+
		"\"\2\u00f8\u00f9\5\67\34\2\u00f9\u00fb\5\'\24\2\u00fa\u00fc\5;\36\2\u00fb"+
		"\u00fa\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u0100\3\2\2\2\u00fd\u00ff\5\25"+
		"\13\2\u00fe\u00fd\3\2\2\2\u00ff\u0102\3\2\2\2\u0100\u00fe\3\2\2\2\u0100"+
		"\u0101\3\2\2\2\u0101L\3\2\2\2\u0102\u0100\3\2\2\2\u0103\u0107\5\5\3\2"+
		"\u0104\u0106\5\25\13\2\u0105\u0104\3\2\2\2\u0106\u0109\3\2\2\2\u0107\u0105"+
		"\3\2\2\2\u0107\u0108\3\2\2\2\u0108\u010b\3\2\2\2\u0109\u0107\3\2\2\2\u010a"+
		"\u010c\5\33\16\2\u010b\u010a\3\2\2\2\u010b\u010c\3\2\2\2\u010c\u0110\3"+
		"\2\2\2\u010d\u010f\5\25\13\2\u010e\u010d\3\2\2\2\u010f\u0112\3\2\2\2\u0110"+
		"\u010e\3\2\2\2\u0110\u0111\3\2\2\2\u0111\u0113\3\2\2\2\u0112\u0110\3\2"+
		"\2\2\u0113\u0114\59\35\2\u0114\u0115\5\37\20\2\u0115\u0116\5\63\32\2\u0116"+
		"\u0117\5%\23\2\u0117\u0118\5\65\33\2\u0118\u011d\5\61\31\2\u0119\u011a"+
		"\5+\26\2\u011a\u011b\5E#\2\u011b\u011c\5\'\24\2\u011c\u011e\3\2\2\2\u011d"+
		"\u0119\3\2\2\2\u011d\u011e\3\2\2\2\u011e\u0121\3\2\2\2\u011f\u0122\5;"+
		"\36\2\u0120\u0122\5%\23\2\u0121\u011f\3\2\2\2\u0121\u0120\3\2\2\2\u0121"+
		"\u0122\3\2\2\2\u0122\u0126\3\2\2\2\u0123\u0125\5\25\13\2\u0124\u0123\3"+
		"\2\2\2\u0125\u0128\3\2\2\2\u0126\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127"+
		"N\3\2\2\2\u0128\u0126\3\2\2\2\u0129\u012d\5\5\3\2\u012a\u012c\5\25\13"+
		"\2\u012b\u012a\3\2\2\2\u012c\u012f\3\2\2\2\u012d\u012b\3\2\2\2\u012d\u012e"+
		"\3\2\2\2\u012e\u0131\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u0132\5\33\16\2"+
		"\u0131\u0130\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0136\3\2\2\2\u0133\u0135"+
		"\5\25\13\2\u0134\u0133\3\2\2\2\u0135\u0138\3\2\2\2\u0136\u0134\3\2\2\2"+
		"\u0136\u0137\3\2\2\2\u0137\u013a\3\2\2\2\u0138\u0136\3\2\2\2\u0139\u013b"+
		"\5\21\t\2\u013a\u0139\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013c\3\2\2\2"+
		"\u013c\u0140\7\63\2\2\u013d\u013f\5\25\13\2\u013e\u013d\3\2\2\2\u013f"+
		"\u0142\3\2\2\2\u0140\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0143\3\2"+
		"\2\2\u0142\u0140\3\2\2\2\u0143\u0147\5\27\f\2\u0144\u0146\5\25\13\2\u0145"+
		"\u0144\3\2\2\2\u0146\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2"+
		"\2\2\u0148P\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014b\5O(\2\u014bR\3\2\2"+
		"\2\u014c\u0150\5\5\3\2\u014d\u014f\5\25\13\2\u014e\u014d\3\2\2\2\u014f"+
		"\u0152\3\2\2\2\u0150\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u0154\3\2"+
		"\2\2\u0152\u0150\3\2\2\2\u0153\u0155\5\33\16\2\u0154\u0153\3\2\2\2\u0154"+
		"\u0155\3\2\2\2\u0155\u0159\3\2\2\2\u0156\u0158\5\25\13\2\u0157\u0156\3"+
		"\2\2\2\u0158\u015b\3\2\2\2\u0159\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a"+
		"\u015c\3\2\2\2\u015b\u0159\3\2\2\2\u015c\u015d\5\37\20\2\u015d\u015e\5"+
		"\63\32\2\u015e\u015f\5;\36\2\u015f\u0160\5A!\2\u0160\u0161\5\'\24\2\u0161"+
		"\u0163\59\35\2\u0162\u0164\5;\36\2\u0163\u0162\3\2\2\2\u0163\u0164\3\2"+
		"\2\2\u0164\u0168\3\2\2\2\u0165\u0167\5\25\13\2\u0166\u0165\3\2\2\2\u0167"+
		"\u016a\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169\u016b\3\2"+
		"\2\2\u016a\u0168\3\2\2\2\u016b\u016f\5\35\17\2\u016c\u016e\5\25\13\2\u016d"+
		"\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f\u016d\3\2\2\2\u016f\u0170\3\2"+
		"\2\2\u0170\u0172\3\2\2\2\u0171\u016f\3\2\2\2\u0172\u0176\5\5\3\2\u0173"+
		"\u0175\5\25\13\2\u0174\u0173\3\2\2\2\u0175\u0178\3\2\2\2\u0176\u0174\3"+
		"\2\2\2\u0176\u0177\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2\u0179"+
		"\u017b\5\33\16\2\u017a\u0179\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017f\3"+
		"\2\2\2\u017c\u017e\5\25\13\2\u017d\u017c\3\2\2\2\u017e\u0181\3\2\2\2\u017f"+
		"\u017d\3\2\2\2\u017f\u0180\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u017f\3\2"+
		"\2\2\u0182\u0184\5\21\t\2\u0183\u0182\3\2\2\2\u0183\u0184\3\2\2\2\u0184"+
		"\u0188\3\2\2\2\u0185\u0187\5\5\3\2\u0186\u0185\3\2\2\2\u0187\u018a\3\2"+
		"\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018b\3\2\2\2\u018a"+
		"\u0188\3\2\2\2\u018b\u018f\5\13\6\2\u018c\u018e\5\25\13\2\u018d\u018c"+
		"\3\2\2\2\u018e\u0191\3\2\2\2\u018f\u018d\3\2\2\2\u018f\u0190\3\2\2\2\u0190"+
		"\u0192\3\2\2\2\u0191\u018f\3\2\2\2\u0192\u0196\5\27\f\2\u0193\u0195\5"+
		"\25\13\2\u0194\u0193\3\2\2\2\u0195\u0198\3\2\2\2\u0196\u0194\3\2\2\2\u0196"+
		"\u0197\3\2\2\2\u0197T\3\2\2\2\u0198\u0196\3\2\2\2\u0199\u019a\13\2\2\2"+
		"\u019aV\3\2\2\2\60\2Z^guy\u00ae\u00b2\u00b7\u00c0\u00c5\u00cc\u00d0\u00d5"+
		"\u00de\u00e3\u00ea\u00ee\u00f3\u00fb\u0100\u0107\u010b\u0110\u011d\u0121"+
		"\u0126\u012d\u0131\u0136\u013a\u0140\u0147\u0150\u0154\u0159\u0163\u0168"+
		"\u016f\u0176\u017a\u017f\u0183\u0188\u018f\u0196\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}