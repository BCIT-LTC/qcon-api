# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

##### Pipeline Overview #####
#
# #### `main` branch ####
#
# - continuously deployed to k8s staging cluster
# - on all MR, build new image tagged "latest"
# - deploy image tagged `latest` to k8s staging cluster
#
# #### `release` branch ####
#
# - continuously deployed to k8s prod cluster
# - on all MR, build new GitLab release
# - git tag commit with semantic-release version
# - build new image tagged with semver version
# - build new image tagged with `stable`
# - deploy image tagged `stable` to k8s prod cluster (Fleet)
#
# #### Notes ####
#
# - builds performed by Kaniko (k8s prod cluster)
#   - Kaniko docs are here: https://github.com/GoogleContainerTools/kaniko
#   - GitLab CI/CD pipeline docs for Kaniko builds are here: https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
# - semantic versioning is automated by analyzing commit messages for keywords
#   - refer to : https://semantic-release.gitbook.io/semantic-release/usage/configuration for CLI configuration

stages:
  - test
  - build
  - semver-tagging
  - release
  - deploy

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml

variables:
  VAULT_SERVER_URL: "https://vault.ltc.bcit.ca:8200"
  VAULT_AUTH_ROLE: "web-apps-staging"

# #### Re-usable configurations ####
#
# Kaniko template
.build_with_kaniko:
  stage: build
  image: 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]

# Deploy template
.deploy:
  stage: deploy
  image: bitnami/kubectl:latest

# #### Jobs ####
#
# Run static application security test (https://issues.ltc.bcit.ca/help/user/application_security/sast/index)
security_scan:
  stage: test
  script:
    - echo "running scan"
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "main" && $CI_MERGE_REQUEST_EVENT_TYPE != "detached"'

# This job is for building the image with Kaniko (latest)
build_latest:
  extends: .build_with_kaniko
  needs: ["security_scan"]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json  
    - "/kaniko/executor --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $CI_REGISTRY_IMAGE/$CI_PROJECT_NAME:latest"
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "main" && $CI_MERGE_REQUEST_EVENT_TYPE != "detached"'

# This job deploys the image tagged with `latest` to the k8s staging cluster
deploy_staging:
  extends: .deploy
  needs: ["build_latest"]
  environment:
    name: staging
    url: https://builds.dev.ltc.bcit.ca/$CI_COMMIT_BRANCH
    kubernetes:
      namespace: staging
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "main" && $CI_MERGE_REQUEST_EVENT_TYPE != "detached"'
  script:
      - echo "deploy to staging"
      - echo "$VAULT_SECRET"
    # - kubectl apply -k overlays/staging
# TODO: update overlays/staging/deployment.yaml to use pipeline variable ($CI_COMMIT_TAG) to pull appropriate image

read_secrets:
  # secrets:
  #   VAULT_SECRET:
  #     vault: "staging/foo@ops"  # translates to secret `ops/data/production/db`, field `password`
  script:
    - export VAULT_ADDR=https://vault.ltc.bcit.ca:8200
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=web-apps-staging jwt=$CI_JOB_JWT)"
    - export VAULT_SECRET="$(vault kv get -field=foo ops/staging)"
    - echo "$VAULT_SECRET"

# This job is for running semantic-versioning for releasing whenever there is a merge request
# on the release branch
semver_release:
  image: node:12-buster-slim
  stage: release
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - export GIT_AUTHOR_NAME=$GITLAB_USER_LOGIN
    - export GIT_AUTHOR_EMAIL=$GITLAB_USER_EMAIL
    - export GIT_COMMITTER_NAME=$GITLAB_USER_LOGIN
    - export GIT_COMMITTER_EMAIL=$GITLAB_USER_EMAIL
    - npm install -g semantic-release @semantic-release/gitlab
  script:
    - 'semantic-release'
  rules:
    - if: '$CI_COMMIT_REF_SLUG == "release" && $CI_MERGE_REQUEST_EVENT_TYPE != "detached"'

# This job is for building the image with Kaniko (stable)
build_stable:
  extends: .build_with_kaniko
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json  
    - "/kaniko/executor --context $CI_PROJECT_DIR 
      --dockerfile $CI_PROJECT_DIR/Dockerfile 
      --destination $CI_REGISTRY_IMAGE/$CI_PROJECT_NAME:$CI_COMMIT_TAG 
      --destination $CI_REGISTRY_IMAGE/$CI_PROJECT_NAME:stable"
  rules:
     - if: '$CI_COMMIT_TAG'

# This job deploys the most recent `stable` image to the k8s prod cluster
deploy_production:
  extends: .deploy
  needs: ["build_stable"]
  environment: production
  rules:
    - if: $CI_COMMIT_TAG
  script:
      - echo "deploy to prod"
    # - kubectl apply -k overlays/prod/j
#nothing